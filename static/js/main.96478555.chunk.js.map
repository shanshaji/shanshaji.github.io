{"version":3,"sources":["resume.pdf","components/header.js","components/about.js","components/resume.js","components/contact.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","About","image","bio","street","state","zip","phone","email","src","alt","Resume","target","rel","education","e","school","degree","graduated","work","job","company","years","skills","skill","toLowerCase","style","width","level","Contact","subject","message","status","handleChange","bind","handleSubmit","event","value","setState","ev","preventDefault","form","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","onSubmit","htmlFor","type","size","placeholder","onChange","cols","rows","Footer","App","resumeData","main","resume","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.96478555.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.999eeb66.pdf\";","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var occupation = this.props.data.occupation;\n      var description = this.props.data.description;\n      var city = this.props.data.address.city;\n      var networks = this.props.data.social.map(function (network) {\n        return (\n          <li key={network.name}>\n            <a href={network.url}>\n              <i className={network.className}></i>\n            </a>\n          </li>\n        );\n      });\n    }\n    return (\n      <header id=\"home\">\n        <nav id=\"nav-wrap\">\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3>\n              I'm a <span>{occupation}</span> from {city}. {description}\n            </h3>\n            <hr />\n            <ul className=\"social\">{networks}</ul>\n          </div>\n        </div>\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Resume from \"../resume.pdf\";\n\nclass About extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var image = \"images/\" + this.props.data.image;\n      var bio = this.props.data.bio;\n      var street = this.props.data.address.street;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var zip = this.props.data.address.zip;\n      var phone = this.props.data.phone;\n      var email = this.props.data.email;\n    }\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src={image} alt=\"\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <p>{bio}</p>\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{name}</span>\n                  <br />\n                  <span>\n                    {street}\n                    <br />\n                    {city}, {state} {zip}\n                  </span>\n                  <br />\n                  <span>{phone}</span>\n                  <br />\n                  <span>{email}</span>\n                </p>\n              </div>\n              <div className=\"columns download\">\n                <p>\n                  <a\n                    href={Resume}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"button\"\n                  >\n                    <i className=\"fa fa-download\"></i>Download Resume\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Resume extends Component {\n  render() {\n    if (this.props.data) {\n      var education = this.props.data.education.map((e) => {\n        return (\n          <div key={e.school} className=\"row item\">\n            <div className=\"twelve columns\">\n              <h3>{e.school}</h3>\n              <p className=\"info\">\n                {e.degree} <span>&bull;</span>{\" \"}\n                <em className=\"date\">{e.graduated}</em>\n              </p>\n              <p>{e.description}</p>\n            </div>\n          </div>\n        );\n      });\n\n      var work = this.props.data.work.map((job) => {\n        return (\n          <div key={job.company} className=\"row item\">\n            <div className=\"twelve columns\">\n              <h3>{job.company}</h3>\n              <p className=\"info\">\n                {job.title}\n                <span>&bull;</span> <em className=\"date\">{job.years}</em>\n              </p>\n\n              <p>{job.description}</p>\n            </div>\n          </div>\n        );\n      });\n\n      var skills = this.props.data.skills.map((skill) => {\n        var className = \"bar-expand \" + skill.name.toLowerCase();\n        return (\n          <li key={skill.name}>\n            <span style={{ width: skill.level }} className={className}></span>\n            <em>{skill.name}</em>\n          </li>\n        );\n      });\n    }\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">{education}</div>\n        </div>\n\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">{work}</div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            <p>\n              The main skill sets below outline the variety of skills performed\n              during my journey as a {this.props.title}.\n            </p>\n            <div className=\"bars\">\n              <ul className=\"skills\">{skills}</ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      status: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n\n  render() {\n    if (this.props.data) {\n      let name = this.props.data.name;\n      let street = this.props.data.address.street;\n      let city = this.props.data.address.city;\n      let state = this.props.data.address.state;\n      let zip = this.props.data.address.zip;\n      let phone = this.props.data.phone;\n      const { status } = this.state;\n      return (\n        <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">Please feel free to contact me.</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"eight columns\">\n              <form\n                onSubmit={this.handleSubmit}\n                id=\"contactForm\"\n                name=\"contactForm\"\n                action=\"https://formspree.io/mlepwjle\"\n                method=\"POST\"\n              >\n                <fieldset>\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      size=\"35\"\n                      id=\"contactName\"\n                      placeholder=\"Name Required\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      placeholder=\"Email Required\"\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      size=\"35\"\n                      placeholder=\"Subject Title\"\n                      id=\"contactSubject\"\n                      name=\"subject\"\n                      value={this.state.subject}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"50\"\n                      rows=\"15\"\n                      id=\"contactMessage\"\n                      placeholder=\"Main Message\"\n                      name=\"message\"\n                      value={this.state.message}\n                      onChange={this.handleChange}\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    {status === \"SUCCESS\" ? (\n                      <p>Thanks!</p>\n                    ) : (\n                      <button type=\"submit\" className=\"submit\">\n                        Submit\n                      </button>\n                    )}\n                    {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n\n                    <span id=\"image-loader\">\n                      <img alt=\"\" src=\"images/loader.gif\" />\n                    </span>\n                  </div>\n                </fieldset>\n              </form>\n            </div>\n\n            <aside className=\"four columns footer-widgets\">\n              <div className=\"widget widget_contact\">\n                <h4>Address and Phone</h4>\n                <p className=\"address\">\n                  {name}\n                  <br />\n                  {street} <br />\n                  {city}, {state} {zip}\n                  <br />\n                  <span>{phone}</span>\n                </p>\n              </div>\n            </aside>\n          </div>\n        </section>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"copyright\">\n              <li>&copy; Copyright 2020 Shan Shaji </li>\n            </ul>\n          </div>\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport About from './components/about';\nimport Resume from './components/resume';\nimport Contact from './components/contact';\nimport Footer from './components/footer';\nimport {main,resume} from './resumeData.json';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      \n      resumeData:{\n        main: main,\n        resume: resume,\n      }\n    }\n  }\n\n\n\n\n  render() {\n    console.log(main);\n    return (\n      <div className=\"App\">\n        <Header data={main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} title={this.state.resumeData.main.occupation} />\n        <Contact data={this.state.resumeData.main} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}